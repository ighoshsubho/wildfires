import Head from "next/head";
import Body from "../components/Body";
import Header from "../components/Header";
import SmallCard from "../components/SmallCard";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
export default function Home({ exploreData }) {
  let router = useRouter();
  const [propState, setPropState] = useState(false);
  const [wildfires, setWildfires] = useState({});
  const [data1, setData1] = useState(null);
  const [data2, setData2] = useState(null);
  const [print, setPrint] = useState(false);

  useEffect(() => {
    let token = sessionStorage.getItem("Token");
    if (!token) {
      setPropState(false);
    }

    if (token) {
      setPropState(true);
      router.push("/");
    }
  }, []);

  console.log(exploreData);

  function getData1(val) {
    setPrint(false);
    setData1(val.target.value);
  }

  function getData2(val) {
    setPrint(false);
    setData2(val.target.value);
  }

  return (
    <div className="">
      <Head>
        <title>wildfire-detector</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header props={propState} />
      <Body />
      <main className="max-w-7xl mx-auto px-8 sm:px-16">
        <section className="pt-6">
          <h4 className="text-2xl font-semibold pb-5">
            Enter your location by Co-ordinates to know if you are safe or not
          </h4>
          <input
            type="text"
            onChange={getData1}
            className="border-2 mb-3 mr-2 p-2 rounded-md"
            placeholder="longitude"
          />
          <input
            type="text"
            onChange={getData2}
            className="border-2 mb-3 mr-2 p-2 rounded-md"
            placeholder="latitude"
          />
          <button
            onClick={() => setPrint(true)}
            className="border-2 p-1 rounded-lg bg-gray-400 text-white hover:scale-105"
          >
            submit
          </button>
          {print ? (
            <div className="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
              <h1>{data1}</h1>
              <h1>{data2}</h1>
              {exploreData?.map(({ id, title }) => (
                <SmallCard id={id} title={title} />
              ))}
            </div>
          ) : null}
        </section>
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  const res = await fetch(
    "https://eonet.gsfc.nasa.gov/api/v3/events",
    {
      next: { revalidate: 10 },
    }
  );
  const { events } = await res.json();
  let exploreDataWildFires = [];
  let locationInfo = {};
  var x = 0;
  events.map((ev, _) => {
    if (ev.categories[0].id === "wildfires") {
      locationInfo = { id: ev.id, title: ev.title };
      exploreDataWildFires.push(locationInfo);
      console.log(locationInfo);
      x = x + 1;
      console.log(x);
    } else if (x == 5) {
      return;
    }
  });
  const exploreData = exploreDataWildFires;
  return {
    props: {
      exploreData,
    },
  };
}
